Description: >
  C964 ML Prediction Layer /
  Contains a full VPC with a public and private subnet for containing an EFS that will be mounted by Lambdas in order to provide the TensorFlow dependencies for predictions. Also contains an EC2 for SSH access for managing the EFS.

Parameters:
  EnvironmentName:
    Description: The name to be prefixed to resource names.
    Type: String
  VpcCidr:
    Description: IP Range for the VPC
    Type: String
    Default: 10.0.0.0/16
  PublicSubnetCidr:
    Description: IP Range for the public subnet, default all traffic in the VPC.
    Type: String
    Default: 10.0.0.0/24
  PrivateSubnetCidr:
    Description: IP Range for the private subnet, default all traffic in the VPC.
    Type: String
    Default: 10.0.0.0/24
  AccessCidr:
    Description: The IP of the machine allowed access into the EC2 within the VPC.
    Type: String
  AmiId:
    Description: The AMI ID of the Linux distribution to use.
    Type: String

Resources:
### NETWORK ###
  VPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: !Ref VpcCidr
      EnableDnsHostnames: true
      Tags:
        - Key: Name
          Value: !Ref EnvironmentName
  InternetGateway:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value: !Ref EnvironmentName
  InternetGatewayAttachment:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      InternetGatewayId: !Ref InternetGateway
      VpcId: !Ref VPC
### SUBNETS ###
  PublicSubnet:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      AvailabilityZone: !Select [0, !GetAZs '']
      CidrBlock: !Ref PublicSubnetCidr
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName}-PUB-SN
  PrivateSubnet:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      AvailabilityZone: !Select [0, !GetAZs '']
      CidrBlock: !Ref PrivateSubnetCidr
      MapPublicIpOnLaunch: false
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName}-PRI-SN
### ROUTES ###
  PublicRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName}-PUB-ROUTES
  DefaultPublicRoute:
    Type: AWS::EC2::Route
    DependsOn: InternetGatewayAttachment
    Properties:
      RouteTableId: !Ref PublicRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref InternetGateway
  PublicSubnetRouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PublicRouteTable
      SubnetId: !Ref PublicSubnet
  PrivateRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName}-PRIV-ROUTES
  PrivateSubnetRouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PrivateRouteTable
      SubnetId: !Ref PrivateSubnet
### SEC GROUPS ###
  EFSManagerSG:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: SSH Ingress into EFS management server
      VpcId: !Ref VPC
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: !Ref AccessCidr
      SecurityGroupEgress:
        - IpProtocol: tcp
          FromPort: 0
          ToPort: 65535
          CidrIp: 0.0.0.0/0
  EFSSecGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Private SG allowing ingress only from the VPC for EFS access
      VpcId: !Ref VPC
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 2049
          ToPort: 2049
          SourceSecurityGroupId: !Ref EFSManagerSG
      SecurityGroupEgress:
        - IpProtocol: tcp
          FromPort: 0
          ToPort: 65535
          CidrIp: 0.0.0.0/0
### EFS ###
  EFSResource:
    Type: AWS::EFS::FileSystem
    Properties:
      BackupPolicy:
        Status: DISABLED
      PerformanceMode: generalPurpose
      FileSystemTags:
        - Key: Name
          Value: !Sub ${EnvironmentName}-EFSResource
  EFSPrivateMountTarget:
    Type: AWS::EFS::MountTarget
    Properties:
      FileSystemId: !Ref EFSResource
      SecurityGroups:
        - Ref: EFSSecGroup
      SubnetId: !Ref PrivateSubnet
### EC2 Instance for managing the EFS ###
  EFSManager:
    Type: AWS::EC2::Instance
    DependsOn: EFSPrivateMountTarget
    Properties:
      InstanceType: t2.small
      ImageId: !Ref AmiId
      KeyName: c964
      SubnetId: !Ref PublicSubnet
      SecurityGroupIds:
        - Ref: EFSManagerSG
        - Ref: EFSSecGroup
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName}-EFSManager
      UserData:
        Fn::Base64: !Sub |
          #!/bin/bash
          yum install -y nfs-utils amazon-efs-utils python3
          mkdir /home/ec2-user/efs
          chown ec2-user /home/ec2-user/efs

### VPC Endpoints for S3 and DynamoDB (future use) ###
  S3Endpoint:
    Type: AWS::EC2::VPCEndpoint
    Properties:
      PolicyDocument:
        Version: 2012-10-17
        Statement:
        - Effect: Allow
          Principal: "*"
          Action:
            - "s3:*"
          Resource:
            - "*"
      RouteTableIds:
        - !Ref PrivateRouteTable
      ServiceName: !Sub com.amazonaws.${AWS::Region}.s3
      VpcId: !Ref VPC
  DynamoDBEndpoint:
    Type: AWS::EC2::VPCEndpoint
    Properties:
      PolicyDocument:
        Version: 2012-10-17
        Statement:
        - Effect: Allow
          Principal: "*"
          Action:
            - "dynamodb:*"
          Resource:
            - "*"
      RouteTableIds:
        - !Ref PrivateRouteTable
      ServiceName: !Sub com.amazonaws.${AWS::Region}.dynamodb
      VpcId: !Ref VPC

Outputs:
  VPC:
    Description: Reference to the parent VPC
    Value: !Ref VPC
    Export:
      Name: !Sub ${EnvironmentName}-VPCID
  VPCPublicRouteTable:
    Description: Public Routing Table
    Value: !Ref PublicRouteTable
    Export:
      Name: !Sub ${EnvironmentName}-PUB-RT
  VPCPrivateRouteTable:
    Description: Private Routing Table
    Value: !Ref PrivateRouteTable
    Export:
      Name: !Sub ${EnvironmentName}-PRI-RT
  PublicSubnet:
    Description: The public subnet
    Value: !Ref PublicSubnet
    Export:
      Name: !Sub ${EnvironmentName}-PUB-SN
  PrivateSubnet:
    Description: The private subnet
    Value: !Ref PrivateSubnet
    Export:
      Name: !Sub ${EnvironmentName}-PRI-SN
  EFSManager:
    Description: The EC2 instance for managing EFS
    Value: !Ref EFSManager
    Export:
      Name: !Sub ${EnvironmentName}-EFSManager
  EFSFileSystem:
    Description: The EFS created
    Value: !Ref EFSResource
    Export:
      Name: !Sub ${EnvironmentName}-EFS
